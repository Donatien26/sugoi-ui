name: Release sugoi-ui

on: workflow_dispatch
   

jobs:

  pre-release:
    name: pre-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Checkout Branch
        run: |
          git config --global user.name "Insee - Domaine Outils Transverses"
          git config --global user.email "dg75-dsi-domaine-outils-transverses@insee.fr"  
          git checkout -b release-${APP_VERSION}

      - name: Prepare current version
        run: yarn version --new-version ${{ steps.get_version.outputs.VERSION }}

      - name: Commit and push new change
        run: |
          git add .
          git commit -sm "[REL] :roket: prepare new version ${APP_VERSION}"
          git push origin prepare-version-$new_version
          gh pr create --title "[REL] :roket: prepare new version ${APP_VERSION}" --body "[REL] :roket: prepare new version ${APP_VERSION}"

      - name: Install dependencies with Yarn
        run: yarn

      - name: Set version
        run: |
          yarn version --new-version ${{ steps.get_version.outputs.VERSION }}

      - run: yarn build
        name: Build with Yarn
        
      - uses: papeloto/action-zip@v1
        name: Zip build
        with:
          files: build/
          dest: sugoi-ui-${{ steps.get_version.outputs.VERSION }}-distribution.zip

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: ${{ needs.build.outputs.version }}
          draft: false
          prerelease: false

      - name: Add zip to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sugoi-ui-${{ needs.build.outputs.version }}-distribution.zip
          asset_name: sugoi-ui-${{ needs.build.outputs.version }}-distribution.zip
          asset_content_type: zip

      - name: Prepare next version
        run: yarn version --minor

      - id: get_version
        name: Get next version
        run: echo ::set-output name=VERSION::$(node -p "require('./package.json').version")

      - name: Commit and push new change
        run: |
          git add .
          git commit -sm "[ENH] :sparkles: prepare next version ${{ steps.get_version.outputs.VERSION }}"
          git push origin prepare-version-$new_version
          